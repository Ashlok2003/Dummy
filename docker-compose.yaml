services:
  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    container_name: react-backend-mysql
    restart: always
    environment:
      MYSQL_DATABASE: reactDemo
      MYSQL_ROOT_PASSWORD: admin
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5
      start_period: 20s

  backend:
    build: ./Backend
    container_name: react-backend-app
    restart: always
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/reactDemo
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: admin
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      LOGGING_LEVEL_ORG_HIBERNATE_SQL: DEBUG
      LOGGING_LEVEL_ORG_HIBERNATE_TYPE_DESCRIPTOR_SQL_BASICBINDER: TRACE
      SPRING_MVC_CORS_ALLOWED_ORIGINS: http://localhost:3000
      SPRING_MVC_CORS_ALLOWED_METHODS: GET,POST,PUT,DELETE
      SPRING_MVC_CORS_ALLOWED_HEADERS: "*"
    ports:
      - "8080:8080"
    networks:
      - app-network
    depends_on:
      mysql:
        condition: service_healthy

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge
